
services:
  glauth:
    image: docker.io/glauth/glauth:latest
    container_name: glauth
    restart: always
    networks:
      - web
    ports:
      - "389:389"
      - "636:636"
    volumes:
      - ./configs/glauth/config.cfg:/app/config/config.cfg
      - ./certs/glauth:/app/certs

  traefik:
    image: docker.io/traefik:latest
    container_name: traefik
    restart: always
    ports:
      - "0.0.0.0:${TRAEFIK_PORT}:443"
    labels:
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.services.app.loadbalancer.server.port=80"
    volumes:
      - ./configs/traefik/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web

  cyberchef:
    image: whoisbrnd.azurecr.io/cyberchef:2025.07
    container_name: cyberchef
    restart: always
    environment:
      - TZ=US/New_York
    stdin_open: true
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chef.rule=Host(`chef.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.chef.entrypoints=websecure"
      - "traefik.http.routers.chef.tls=true"
      - "traefik.http.services.chef.loadbalancer.server.port=80"

  vaultwarden:
    image: docker.io/vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      - DOMAIN=https://vault.${TRAEFIK_DOMAIN}:${TRAEFIK_PORT}
    volumes:
      - /opt/vw-data/:/data/
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vault.rule=Host(`vault.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.vault.entrypoints=websecure"
      - "traefik.http.routers.vault.tls=true"
      - "traefik.http.services.vault.loadbalancer.server.port=80"

  minio:
    image: docker.io/minio/minio:latest
    container_name: minio
    restart: always
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.file.rule=Host(`file.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.file.entrypoints=websecure"
      - "traefik.http.routers.file.tls=true"
      - "traefik.http.services.file.loadbalancer.server.port=9001"
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BROWSER_REDIRECT_URL=https://${TRAEFIK_DOMAIN}:${TRAEFIK_PORT}
      - LDAP_ORGANISATION=${LDAP_ORG:-redinfra}
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  mc-init:
    image: docker.io/minio/mc
    depends_on:
      - minio
    container_name: minio-mc-init
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - LDAP_BASEDN=${LDAP_BASEDN}
      - MINIO_LDAP_BIND_USER=${MINIO_LDAP_BIND_USER}
      - MINIO_LDAP_BIND_PASSWORD=${MINIO_LDAP_BIND_PASSWORD}
    volumes:
      - ./integrations/minio_ldap.sh:/scripts/minio_ldap.sh
    entrypoint: >
      /bin/sh -c "/scripts/minio_ldap.sh"
    restart: "no"
    networks:
      - web

  gitea:
    image: docker.gitea.com/gitea:latest
    container_name: gitea
    restart: always
    volumes:
      - gitea_data:/var/lib/gitea
      - gitea_config:/etc/gitea
      - ./integrations/gitea_ldap.sh:/scripts/gitea_ldap.sh
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - GITEA_APP_NAME=Red Infra Gitea
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=gitea-db:5432
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=gitea
      - GITEA__database__PASSWD=${GITEA_DB_PASS}
    ports:
      - "127.0.0.1:8022:22"
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea.rule=Host(`git.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.gitea.entrypoints=websecure"
      - "traefik.http.routers.gitea.tls=true"
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"
    depends_on:
      - gitea-db

  gitea-db:
    image: postgres:${GITEA_DB_VERSION:-latest}
    container_name: gitea-db
    restart: always
    environment:
      - POSTGRES_USER=gitea
      - POSTGRES_PASSWORD=${GITEA_DB_PASS}
      - POSTGRES_DB=gitea
    networks:
      - web
    volumes:
      - gitea_postgresql_data:/var/lib/postgresql/data

  hedgedoc:
    image: lscr.io/linuxserver/hedgedoc:latest
    container_name: hedgedoc
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - CMD_SESSION_SECRET=${HEDGEDOC_SESSION_SECRET}
      - DB_URL=sqlite:///data/sqlite.db
      - CMD_ALLOW_EMAIL_REGISTER=false
      - CMD_ALLOW_FREEURL=true
      - CMD_REQUIRE_FREEURL_AUTHENTICATION=true
      - CMD_ALLOW_ANONYMOUS_EDITS=false
      - CMD_ALLOW_ANONYMOUS=false
      - CMD_ENABLE_STATS_API=true
      - CMD_DOMAIN=hedge.${TRAEFIK_DOMAIN}
      - CMD_URL_ADDPORT=true
      - CMD_PROTOCOL_USESSL=true
      - CMD_PORT=${TRAEFIK_PORT}
      - CMD_ALLOW_ORIGIN=['localhost']
      - CMD_LDAP_URL=ldap://glauth:389
      - CMD_LDAP_BINDDN=cn=${HEDGEDOC_LDAP_BIND_USER},${LDAP_BASEDN}
      - CMD_LDAP_BINDCREDENTIALS=${HEDGEDOC_LDAP_BIND_PASSWORD}
      - CMD_LDAP_SEARCHBASE=ou=users,${LDAP_BASEDN}
      - CMD_LDAP_SEARCHFILTER=(uid={{username}})
      - CMD_LDAP_SEARCHATTRIBUTES=uid,mail
      - CMD_LDAP_USERIDFIELD=uid
    volumes:
      - hedgedoc_config:/config
      - hedgedoc_data:/data
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hedge.rule=Host(`hedge.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.hedge.entrypoints=websecure"
      - "traefik.http.routers.hedge.tls=true"
      - "traefik.http.services.hedge.loadbalancer.server.port=${TRAEFIK_PORT}"

  onlyoffice-documentserver:
    image: docker.io/onlyoffice/documentserver:latest
    container_name: onlyoffice-documentserver
    depends_on:
      - onlyoffice-postgresql
      - onlyoffice-rabbitmq
    env_file:
      - .env
    environment:
      - DB_TYPE=postgres
      - DB_HOST=onlyoffice-postgresql
      - DB_PORT=5432
      - DB_NAME=${ONLYOFFICE_POSTGRES_DB}
      - DB_USER=${ONLYOFFICE_POSTGRES_USER}
      - DB_PASSWORD=${ONLYOFFICE_POSTGRES_PASS}
      - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq
      - JWT_ENABLED=true
      - JWT_SECRET=${ONLYOFFICE_JWT_SECRET}
      - JWT_HEADER=Authorization
      - JWT_IN_BODY=true
    restart: always
    stop_grace_period: 60s
    volumes:
      - onlyoffice_data:/var/www/onlyoffice/Data
      - onlyoffice_log:/var/log/onlyoffice
      - onlyoffice_cache:/var/lib/onlyoffice/documentserver/App_Data/cache/files
      - onlyoffice_example_files:/var/www/onlyoffice/documentserver-example/public/files
      - /usr/share/fonts
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.docs.rule=Host(`docs.red.local`)"
      - "traefik.http.routers.docs.entrypoints=websecure"
      - "traefik.http.routers.docs.tls=true"
      - "traefik.http.services.docs.loadbalancer.server.port=80"

  onlyoffice-rabbitmq:
    container_name: onlyoffice-rabbitmq
    image: docker.io/rabbitmq:4.0 ## Currently a problem with OnlyOffice and RabbitMQ 4.1 due to frame_max changes
    restart: always
    expose:
      - "5672"
    networks:
      - web

  onlyoffice-postgresql:
    container_name: onlyoffice-postgresql
    image: docker.io/postgres:11
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${ONLYOFFICE_POSTGRES_DB}
      - POSTGRES_USER=${ONLYOFFICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${ONLYOFFICE_POSTGRES_PASS}
    restart: always
    volumes:
      - onlyoffice_postgresql_data:/var/lib/postgresql/data
    networks:
      - web

  excalidraw:
    image: whoisbrnd.azurecr.io/excalidraw:2025.07
    container_name: excalidraw
    restart: always
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.draw.rule=Host(`draw.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.draw.entrypoints=websecure"
      - "traefik.http.routers.draw.tls=true"
      - "traefik.http.services.draw.loadbalancer.server.port=80"

volumes:
  minio_data: {}
  gitea_postgresql_data: {} 
  gitea_data: {}
  gitea_config: {}
  hedgedoc_data: {}
  hedgedoc_config: {}
  onlyoffice_postgresql_data: {}
  onlyoffice_data: {}
  onlyoffice_log: {}
  onlyoffice_cache: {}
  onlyoffice_example_files: {}

networks:
  web:
    external: true
