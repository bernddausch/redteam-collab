
services:
  glauth:
    image: docker.io/glauth/glauth:latest
    container_name: glauth
    restart: always
    networks:
      - web
    ports:
      - "389:389"
      - "636:636"
    volumes:
      - ./configs/glauth/config.cfg:/app/config/config.cfg
      - ./certs/glauth:/app/certs

  traefik:
    image: docker.io/traefik:latest
    container_name: traefik
    restart: always
    ports:
      - "127.0.0.1:${TRAEFIK_PORT}:443"
    labels:
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.services.app.loadbalancer.server.port=80"
    volumes:
      - ./configs/traefik/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web

  cyberchef:
    image: whoisbrnd.azurecr.io/cyberchef:2025.07
    container_name: cyberchef
    restart: always
    environment:
      - TZ=US/New_York
    stdin_open: true
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chef.rule=Host(`chef.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.chef.entrypoints=websecure"
      - "traefik.http.routers.chef.tls=true"
      - "traefik.http.services.chef.loadbalancer.server.port=80"

  vaultwarden:
    image: docker.io/vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      - DOMAIN=https://vault.${TRAEFIK_DOMAIN}:${TRAEFIK_PORT}
    volumes:
      - /opt/vw-data/:/data/
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vault.rule=Host(`vault.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.vault.entrypoints=websecure"
      - "traefik.http.routers.vault.tls=true"
      - "traefik.http.services.vault.loadbalancer.server.port=80"

  minio:
    image: docker.io/minio/minio:latest
    container_name: minio
    restart: always
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.file.rule=Host(`file.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.file.entrypoints=websecure"
      - "traefik.http.routers.file.tls=true"
      - "traefik.http.services.file.loadbalancer.server.port=9001"
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BROWSER_REDIRECT_URL=https://${TRAEFIK_DOMAIN}:${TRAEFIK_PORT}
      - LDAP_ORGANISATION=${LDAP_ORG:-redinfra}
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
  mc-init:
    image: docker.io/minio/mc
    depends_on:
      - minio
    container_name: minio-mc-init
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - LDAP_BASEDN=${LDAP_BASEDN}
      - MINIO_LDAP_BIND_USER=${MINIO_LDAP_BIND_USER}
      - MINIO_LDAP_BIND_PASSWORD=${MINIO_LDAP_BIND_PASSWORD}
    volumes:
      - ./integrations/minio_ldap.sh:/scripts/minio_ldap.sh
    entrypoint: >
      /bin/sh -c "/scripts/minio_ldap.sh"
    restart: "no"
    networks:
      - web

  gitea:
    image: docker.gitea.com/gitea:latest
    container_name: gitea
    restart: always
    volumes:
      - gitea_data:/var/lib/gitea
      - gitea_config:/etc/gitea
      - ./integrations/gitea_ldap.sh:/scripts/gitea_ldap.sh
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - GITEA_APP_NAME=Red Infra Gitea
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=gitea-db:5432
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=gitea
      - GITEA__database__PASSWD=${GITEA_DB_PASS}
    ports:
      - "127.0.0.1:8022:22"
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea.rule=Host(`git.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.gitea.entrypoints=websecure"
      - "traefik.http.routers.gitea.tls=true"
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"
    depends_on:
      - gitea-db

  gitea-db:
    image: postgres:${GITEA_DB_VERSION:-latest}
    container_name: gitea-db
    restart: always
    environment:
      - POSTGRES_USER=gitea
      - POSTGRES_PASSWORD=${GITEA_DB_PASS}
      - POSTGRES_DB=gitea
    networks:
      - web
    volumes:
      - gitea_postgresql_data:/var/lib/postgresql/data

volumes:
  minio_data: {}
  gitea_postgresql_data: {} 
  gitea_data: {}
  gitea_config: {}

networks:
  web:
    external: true
